import * as funtypes from 'funtypes'
import { EthereumAddress, EthereumData, EthereumQuantity } from './wire-types.js'
import { AddressBookEntry } from './addressBookTypes.js'

export type PureGroupedSolidityType = funtypes.Static<typeof PureGroupedSolidityType>
export const PureGroupedSolidityType = funtypes.Union(
	funtypes.ReadonlyObject({ type: funtypes.Literal('signedInteger'), value: EthereumQuantity }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('unsignedInteger'), value: EthereumQuantity }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('bytes'), value: EthereumData }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('fixedBytes'), value: EthereumData }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('bool'), value: funtypes.Boolean }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('string'), value: funtypes.String }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('address'), value: EthereumAddress }),
	
	funtypes.ReadonlyObject({ type: funtypes.Literal('signedInteger[]'), value: funtypes.ReadonlyArray(EthereumQuantity) }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('unsignedInteger[]'), value: funtypes.ReadonlyArray(EthereumQuantity) }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('bytes[]'), value: funtypes.ReadonlyArray(EthereumData) }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('fixedBytes[]'), value: funtypes.ReadonlyArray(EthereumData) }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('bool[]'), value: funtypes.ReadonlyArray(funtypes.Boolean) }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('string[]'), value: funtypes.ReadonlyArray(funtypes.String) }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('address[]'), value: funtypes.ReadonlyArray(EthereumAddress) }),
)

export type EnrichedGroupedSolidityType = funtypes.Static<typeof EnrichedGroupedSolidityType>
export const EnrichedGroupedSolidityType = funtypes.Union(
	funtypes.ReadonlyObject({ type: funtypes.Literal('signedInteger'), value: EthereumQuantity }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('unsignedInteger'), value: EthereumQuantity }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('bytes'), value: EthereumData }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('fixedBytes'), value: EthereumData }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('bool'), value: funtypes.Boolean }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('string'), value: funtypes.String }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('address'), value: AddressBookEntry }),
	
	funtypes.ReadonlyObject({ type: funtypes.Literal('signedInteger[]'), value: funtypes.ReadonlyArray(EthereumQuantity) }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('unsignedInteger[]'), value: funtypes.ReadonlyArray(EthereumQuantity) }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('bytes[]'), value: funtypes.ReadonlyArray(EthereumData) }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('fixedBytes[]'), value: funtypes.ReadonlyArray(EthereumData) }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('bool[]'), value: funtypes.ReadonlyArray(funtypes.Boolean) }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('string[]'), value: funtypes.ReadonlyArray(funtypes.String) }),
	funtypes.ReadonlyObject({ type: funtypes.Literal('address[]'), value: funtypes.ReadonlyArray(AddressBookEntry) }),
)

export type SolidityType = funtypes.Static<typeof SolidityType>
export const SolidityType = funtypes.Union(
	funtypes.Literal('uint8'),
	funtypes.Literal('uint16'),
	funtypes.Literal('uint24'),
	funtypes.Literal('uint32'),
	funtypes.Literal('uint40'),
	funtypes.Literal('uint48'),
	funtypes.Literal('uint56'),
	funtypes.Literal('uint64'),
	funtypes.Literal('uint72'),
	funtypes.Literal('uint80'),
	funtypes.Literal('uint88'),
	funtypes.Literal('uint96'),
	funtypes.Literal('uint104'),
	funtypes.Literal('uint112'),
	funtypes.Literal('uint120'),
	funtypes.Literal('uint128'),
	funtypes.Literal('uint136'),
	funtypes.Literal('uint144'),
	funtypes.Literal('uint152'),
	funtypes.Literal('uint160'),
	funtypes.Literal('uint168'),
	funtypes.Literal('uint176'),
	funtypes.Literal('uint184'),
	funtypes.Literal('uint192'),
	funtypes.Literal('uint200'),
	funtypes.Literal('uint208'),
	funtypes.Literal('uint216'),
	funtypes.Literal('uint224'),
	funtypes.Literal('uint232'),
	funtypes.Literal('uint240'),
	funtypes.Literal('uint248'),
	funtypes.Literal('uint256'),
	funtypes.Literal('int8'),
	funtypes.Literal('int16'),
	funtypes.Literal('int24'),
	funtypes.Literal('int32'),
	funtypes.Literal('int40'),
	funtypes.Literal('int48'),
	funtypes.Literal('int56'),
	funtypes.Literal('int64'),
	funtypes.Literal('int72'),
	funtypes.Literal('int80'),
	funtypes.Literal('int88'),
	funtypes.Literal('int96'),
	funtypes.Literal('int104'),
	funtypes.Literal('int112'),
	funtypes.Literal('int120'),
	funtypes.Literal('int128'),
	funtypes.Literal('int136'),
	funtypes.Literal('int144'),
	funtypes.Literal('int152'),
	funtypes.Literal('int160'),
	funtypes.Literal('int168'),
	funtypes.Literal('int176'),
	funtypes.Literal('int184'),
	funtypes.Literal('int192'),
	funtypes.Literal('int200'),
	funtypes.Literal('int208'),
	funtypes.Literal('int216'),
	funtypes.Literal('int224'),
	funtypes.Literal('int232'),
	funtypes.Literal('int240'),
	funtypes.Literal('int248'),
	funtypes.Literal('int256'),
	funtypes.Literal('bytes1'),
	funtypes.Literal('bytes2'),
	funtypes.Literal('bytes3'),
	funtypes.Literal('bytes4'),
	funtypes.Literal('bytes5'),
	funtypes.Literal('bytes6'),
	funtypes.Literal('bytes7'),
	funtypes.Literal('bytes8'),
	funtypes.Literal('bytes9'),
	funtypes.Literal('bytes10'),
	funtypes.Literal('bytes11'),
	funtypes.Literal('bytes12'),
	funtypes.Literal('bytes13'),
	funtypes.Literal('bytes14'),
	funtypes.Literal('bytes15'),
	funtypes.Literal('bytes16'),
	funtypes.Literal('bytes17'),
	funtypes.Literal('bytes18'),
	funtypes.Literal('bytes19'),
	funtypes.Literal('bytes20'),
	funtypes.Literal('bytes21'),
	funtypes.Literal('bytes22'),
	funtypes.Literal('bytes23'),
	funtypes.Literal('bytes24'),
	funtypes.Literal('bytes25'),
	funtypes.Literal('bytes26'),
	funtypes.Literal('bytes27'),
	funtypes.Literal('bytes28'),
	funtypes.Literal('bytes29'),
	funtypes.Literal('bytes30'),
	funtypes.Literal('bytes31'),
	funtypes.Literal('bytes32'),
	funtypes.Literal('bool'),
	funtypes.Literal('address'),
	funtypes.Literal('string'),
	funtypes.Literal('bytes'),
)
